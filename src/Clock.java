//***************************************************************************************************************************************************

public class Clock
{
  //=================================================================================================================================================

  private int hour   ;
  private int minute ;

  //=================================================================================================================================================

  public Clock ( int aHour , int aMinute )
  {
    if ( aHour   <  0 ) { aHour   = 0 ; }
    if ( aHour   > 23 ) { aHour   = 0 ; }
    if ( aMinute <  0 ) { aMinute = 0 ; }
    if ( aMinute > 59 ) { aMinute = 0 ; }

    hour   = aHour   ;
    minute = aMinute ;
  }

  //=================================================================================================================================================

  public synchronized Clock tick ()
  {
    if ( ++minute > 59 )
    {
      minute = 0 ;

      if ( ++hour > 23 )  { hour = 0 ; }
    }

    return this ;  // Can be cascaded, for example, clock.tick().tick().getTime() ;
  }

  //=================================================================================================================================================

  public synchronized int    getHour   ()  { return hour                         ; }
  public synchronized int    getMinute ()  { return minute                       ; }
  public synchronized int [] getTime   ()  { return new int [] { hour , minute } ; }

  //=================================================================================================================================================

  @Override
  public String toString ()
  {
    return String.format( "%02d:%02d" , hour , minute ) ;
  }

  //=================================================================================================================================================
}

//***************************************************************************************************************************************************

